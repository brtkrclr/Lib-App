{"ast":null,"code":"var _jsxFileName = \"/home/berat/lib-app/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { Form, Input, Button, Checkbox, Content } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setValues({\n      username\n    });\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setValues({\n      password\n    });\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Content, {\n    style: {\n      padding: \"0 50px\",\n      textAlign: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      style: {\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: \"Please input your username!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: \"Please input your password!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"/6zHQ6gW6LxwqORGvxAqXsY579Y=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/berat/lib-app/src/Login.js"],"names":["React","useRef","useState","Form","Input","Button","Checkbox","Content","Login","values","setValues","username","password","onChangeUsername","e","target","value","onChangePassword","onFinish","console","log","onFinishFailed","errorInfo","padding","textAlign","display","justifyContent","alignItems","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { Form, Input, Button, Checkbox,Content } from 'antd';\n\nfunction Login() {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setValues({ username });\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setValues({ password });\n  };\n\n  const onFinish = (values) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  return (\n    <Content\n    style={{\n      padding: \"0 50px\",\n      textAlign: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 8,\n      }}\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      autoComplete=\"off\"\n      style={{ alignItems:\"center\"}}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your username!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\",\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"remember\"\n        valuePropName=\"checked\"\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    </Content>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}